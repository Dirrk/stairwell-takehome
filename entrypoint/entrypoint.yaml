apiVersion: v1
kind: Namespace
metadata:
  name: stairwell
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: stairwell
  name: entrypoint-deployment
spec:
  selector:
    matchLabels:
      app: entrypoint
  template:
    metadata:
      labels:
        app: entrypoint
    spec:
      containers:
        - name: entrypoint-container
          # It's totally fine to store the image in a container registry.
          # If so, you'll probably want to change the image and pull policy.
          image: 359294263934.dkr.ecr.us-west-2.amazonaws.com/app/stairwell-entrypoint:latest
          imagePullPolicy: Always
          args:
            - --uri=http://worker-stairwell.rada.world:3000/
          ports:
            - protocol: TCP
              containerPort: 8080
              name: http-server
---
apiVersion: v1
kind: Service
metadata:
  namespace: stairwell
  name: entrypoint-service
spec:
  type: ClusterIP
  selector:
    app: entrypoint
  ports:
    - protocol: TCP
      name: http-server
      targetPort: http-server
      port: 42069 # LUL
---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: stairwell-tls
  namespace: stairwell
spec:
  secretName: stairwell-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - 'stairwell.rada.world'

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: stairwell
  namespace: stairwell
spec:
  entryPoints:
    - public
    - web
    - websecure
  routes:
    - match: Host(`stairwell.rada.world`)
      kind: Rule
      services:
        - name: entrypoint-service
          kind: Service
          port: 42069
          scheme: http
  tls:
    secretName: stairwell-tls
